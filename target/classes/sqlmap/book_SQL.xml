<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : xml파일은 여려개일 수 있으므로 이를 구별하기 위한 식별 용도로 사용 -->
<mapper namespace="book">

	<!-- MyBatis에서 제공해주는 데이터 입력을 나타내는 태그
		1) 드루와: Dao 객체가 던진 데이터 타입(String, ing,hashMap,VO,List) parameterType만 씀
		2) 가즈아 : Dao 객체의 메소드 쪽으로 리턴할 타입
				-resultType : String,int,VO,hashMap
				-resultMap : Mybatis의 resultMap 태그를 사용
		3) insert, update,delete 태그의 resultType은 생략 => 0 또는 반영된 개수
		
	 -->
	 <!-- BOOK 테이블에 insert -->
	<insert id="insert" parameterType="kr.or.ddit.vo.BookVO">
		<selectKey order="BEFORE" resultType="integer" keyProperty="bookId">
			select NVL(MAX(BOOK_ID),0)+1 FROM BOOK
		</selectKey>
		
			insert into book(BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE)
			values(#{bookId},#{title},#{category},#{price},sysdate)
	</insert>
	
	<!-- 책 상세보기 
		select 태그는 조회(select) 쿼리를 실행하기 위한 mybatis 태그
		parameterType(book_SQL.xml로 들어오는 파라미터 타입) : bookVO 타입
		resultType(bookDAO로 가는 파라미터 타입) : bookVO 타입
	-->
	<!-- bookVO(parameterType) => {"bookId":"1",...나머지는 빈값 -->
	<!-- bookVO(resultType) => {"booId":"1","title":"개똥이","category":"소설"...} -->
	<select id="select_detail" parameterType="kr.or.ddit.vo.BookVO" resultType="kr.or.ddit.vo.BookVO">
	
		SELECT BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE 
		FROM BOOK 
		WHERE BOOK_ID = #{bookId}
		
	</select>
	
	<!-- 
	오는 건 없고 가는 건 있음
	 -->
	 <!-- 
	 	where 1=1 은 늘 참
	 	조건이 2개 이상일 때 WHERE + AND
	 	조건이 1개일 때 WHERE이어야함
	 	WHERE(생략)
	 	AND => 오류 발생
	 	==>
	 	WHERE 1=1
	 	AND (생략)
	 	AND => 정상
	  -->
	<select id="list" resultType="kr.or.ddit.vo.BookVO" parameterType="string">
	
	SELECT BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE 
	FROM BOOK
	WHERE 	1=1
	<if test="keyword!=null and keyword!=''">
	AND 	(TITLE LIKE '%' || #{keyword} || '%'
	OR 	  CATEGORY LIKE '%' || #{keyword} || '%')
	</if>
	ORDER BY INSERT_DATE DESC
	
	</select>
	
	<!-- 책 수정하기 -->
	<update id="update" parameterType="kr.or.ddit.vo.BookVO">
	
	UPDATE 	BOOK 
	SET 	TITLE= '#{title}', category='#{category}', PRICE=#{price}
	where 	BOOK_ID = #{bookId}
	
	</update>
	
	<!-- 책 삭제하기. delete 태그는 삭제 SQL을 실행하기 위한 mybatis 태그
		resultType="int" 생략가능
		들어오는 파라미터 int
		 -->
	<delete id="delete" parameterType="int">
	DELETE FROM book
	WHERE
	book_id = #{bookId}
	
	</delete>
	
	 <update id="insertAttach" parameterType="java.util.List">
       <foreach collection="list" item="attachVO" open="INSERT ALL "
          close="SELECT * FROM SYS.DUAL" separator=" ">
          INTO ATTACH VALUES(#{attachVO.seq},#{attachVO.tid},#{attachVO.attachName}
             ,#{attachVO.attachSize},#{attachVO.attachType},sysdate)
       </foreach>
    </update>
    
    <select id="boardMemberList" resultType="kr.or.ddit.vo.BoardMemberVO">
    	SELECT 
 MEM_ID, MEM_PASS, MEM_NAME, MEM_REGNO1, MEM_REGNO2, MEM_BIR, MEM_ZIP, MEM_ADD1, MEM_ADD2, MEM_HOMETEL, MEM_COMTEL, MEM_HP, MEM_MAIL, MEM_JOB, MEM_LIKE, MEM_MEMORIAL, MEM_MEMORIALDAY, MEM_MILEAGE, MEM_DELETE
    	FROM MEMBER
    </select>
</mapper>
